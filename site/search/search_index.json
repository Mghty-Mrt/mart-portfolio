{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"About Me"},{"location":"#education","title":"\ud83c\udf93 Education","text":"<p>Quezon City University \ud83d\udcc5September 14, 2020 - June 27, 2024</p> <p>Bachelor of Science in Information Technology</p> <ul> <li>Cum Laude</li> <li>Quezon City University Scholar</li> </ul> <p>I\u2019m a Junior System Administrator at Wilcon Depot Head Office, specializing in managing multi-branch deployments within Linux environments using automation tools. My core responsibilities include patching and maintaining ETP servers and POS systems, troubleshooting and reconfiguring system errors, and monitoring critical infrastructure through VMware vSphere ESXi.</p> <p>With a solid foundation in system administration and a growing interest in DevOps, I continuously seek to improve infrastructure efficiency, streamline deployment processes, and enhance system reliability. I\u2019m passionate about leveraging open-source technologies and automation to solve operational challenges and support scalable IT solutions.</p> <p>Currently, I'm expanding my skills in scripting, CI/CD pipelines, containerization, and cloud platforms. I thrive in fast-paced environments and enjoy collaborating with cross-functional teams to deliver results.</p>"},{"location":"Skills/","title":"\ud83d\udee0\ufe0f Technical Skills","text":"<ul> <li> <p>Infrastructure &amp; System Administration Linux ( Ubuntu, Debian):   VMware ESXi \u00b7 Static IP Assignment \u00b7 SSL/Certificate Management \u00b7 Virtualization \u00b7 Host Server Operations</p> </li> <li> <p>Containerization &amp; Deployment Docker: Docker Compose \u00b7 Kong API Gateway \u00b7 Konga GUI \u00b7 Nginx \u00b7 Caddy \u00b7 Ansible \u00b7 Bash Scripting</p> </li> <li> <p>Monitoring &amp; Observability: Prometheus \u00b7 Grafana \u00b7 Promtail \u00b7 Zabbix \u00b7 NocoDB</p> </li> <li> <p>Storage &amp; Replication: Nextcloud \u00b7 Samba \u00b7 Duplicati \u00b7 Syncthing</p> </li> <li> <p>Platform Administration: FreePBX \u00b7 3CX \u00b7 Remotely \u00b7 Guacamole</p> </li> <li> <p>Database: MySQL \u00b7 MSSQL</p> </li> <li> <p>Tools: GitLab \u00b7 Airtable \u00b7 PuTTY \u00b7 Termius \u00b7 Screen</p> </li> </ul>"},{"location":"Skills/#soft-skills","title":"\ud83d\udee0\ufe0f Soft Skills","text":"<ul> <li>Communication, Proactiveness, Critical Thinking</li> <li>Analytical thinker with strong troubleshooting abilities</li> <li>A great manager of time and knows how to prioritize urgent &amp; important matters.</li> <li>Quick learner across hardware, software, tools and frameworks</li> <li>Organized, detail-oriented, and calm under pressure</li> <li>Collaborative and independent team player</li> <li>Strong communication and documentation skills</li> <li>Prioritizes operational clarity and system maintainability</li> <li>Committed to continuous learning and knowledge sharing</li> </ul>"},{"location":"Work%20Experience/","title":"\ud83e\uddd1\u200d\ud83d\udcbb Work Experience","text":"<p>Jr. System Administrator Wilcon Depot Head Office</p> <ul> <li>\ud83d\udcc5 Nov 26, 2024 - Present</li> </ul>"},{"location":"Work%20Experience/#infrastructure-load-balancing","title":"\ud83d\udd27 Infrastructure &amp; Load Balancing","text":"<ul> <li> <p>Deployed a resilient Kong API Gateway cluster with three load-balanced nodes for high availability and seamless traffic routing.</p> </li> <li> <p>Built an NGINX load balancer in Docker Compose with real-time health checks and auto-rerouting to healthy Kong nodes.</p> </li> </ul>"},{"location":"Work%20Experience/#observability-logging","title":"\ud83d\udcca Observability &amp; Logging","text":"<ul> <li> <p>Centralized Kong logs via Promtail with tagged metadata and failover transparency in Grafana.</p> </li> <li> <p>Verified cluster failover through controlled node outages and recovery testing to meet uptime goals.</p> </li> </ul>"},{"location":"Work%20Experience/#metrics-monitoring","title":"\ud83d\udcc8 Metrics &amp; Monitoring","text":"<ul> <li>Implemented a full observability stack (Prometheus, Grafana, Promtail) with dashboards for API performance and error tracking.</li> </ul>"},{"location":"Work%20Experience/#virtualization-resource-optimization","title":"\ud83d\udda5\ufe0f Virtualization &amp; Resource Optimization","text":"<ul> <li> <p>Managed VMware vSphere ESXi stack for consolidating services and optimizing infrastructure resources.</p> </li> <li> <p>Confidently administered VMware ESXi environments, enabling the reduction of physical server needs by implementing a scalable and virtualized infrastructure.</p> </li> <li> <p>Utilized virtualization to create, clone, and migrate servers efficiently, optimizing resource utilization and enhancing flexibility in server management.</p> </li> </ul>"},{"location":"Work%20Experience/#linux-system-oversight","title":"\ud83d\udee0\ufe0f Linux System Oversight","text":"<ul> <li>Managed Ubuntu/Debian Servers: Ensured secure, multi-tenant environments by administering Ubuntu/Debian servers, implementing best practices for system security and performance optimization.</li> </ul>"},{"location":"Work%20Experience/#standerdized-deployments-with-docker-compose","title":"\ud83d\udc33 Standerdized Deployments with Docker Compose:","text":"<ul> <li> <p>Developed and utilized Docker Compose to create standardized deployment processes for efficient application management. </p> </li> <li> <p>Implemented containerization strategies that simplified configuration modifications and ensured isolated networking for specific groups of containers.</p> </li> <li> <p>Organized deployment projects by creating structured folders containing Docker Compose files, which facilitated easy access to configurations and insights into the containerized application's environment, including configurations, databases, and directory structures.</p> </li> </ul>"},{"location":"Work%20Experience/#optimized-server-provisioning-with-ansible","title":"\u2699\ufe0f Optimized Server Provisioning with Ansible:","text":"<ul> <li> <p>Created and maintained Ansible scripts for automating the provisioning and configuration of multiple servers simultaneously.</p> </li> <li> <p>Ensured applications were deployed across servers with uniform configurations, enhancing consistency, reducing setup time, and minimizing configuration drift.</p> </li> </ul>"},{"location":"Work%20Experience/#reverse-proxy-design","title":"\ud83d\udd10 Reverse Proxy Design","text":"<ul> <li> <p>Configured NGINX as a reverse proxy to enhance security and efficiently manage incoming traffic. </p> </li> <li> <p>Implemented access control measures ensuring that internal resources were accessible only via DNS, masking real IP addresses for added security.</p> </li> <li> <p>Built flexible reverse proxy layers with Nginx and Caddy for SSL termination and dynamic route management.</p> </li> </ul>"},{"location":"Work%20Experience/#database-administration","title":"\ud83d\uddc3\ufe0f Database Administration","text":"<ul> <li>Administered MySQL and MSSQL databases for internal tools and monitoring systems.</li> </ul>"},{"location":"Work%20Experience/#platform-integration-service-management-for-internal-use","title":"\ud83e\udde9 Platform Integration &amp; Service Management for internal use","text":"<ul> <li>Integrated communication (FreePBX, 3CX)</li> <li>Storage (Samba, Nextcloud, Syncthing)</li> <li>Backup (Duplicati)</li> <li>Remote Access (Remotely)</li> </ul>"},{"location":"Projects/Free%20PBX/","title":"Free PBX Server","text":""},{"location":"Projects/Free%20PBX/#free-pbx-dashboard","title":"Free PBX Dashboard","text":""},{"location":"Projects/Free%20PBX/#extensions","title":"Extensions","text":"<ul> <li>Internal numbers assigned to employees and managers for direct communication within the PBX.</li> </ul>"},{"location":"Projects/Free%20PBX/#queues","title":"Queues","text":"<ul> <li>Call groups that route incoming calls\u2014starting with Helpdesk, which forwards them to the right team based on client needs.</li> </ul>"},{"location":"Projects/Free%20PBX/#3cx","title":"3CX","text":""},{"location":"Projects/Guacamole/","title":"Guacamole Server","text":""},{"location":"Projects/Guacamole/#guacamole-dashboard","title":"Guacamole Dashboard","text":"<ul> <li> <p>This is the Guacamole Dashboard I maintain for remote access across our replicated branch systems. Each tile\u2014like D53-Replication or DB6-Replication\u2014represents a live session, often tied to mirrored environments for redundancy.</p> </li> <li> <p>As guacadmin, I manage access, naming conventions, and grouping to keep things scalable and intuitive. I\u2019ve also documented the setup for easy onboarding and can automate provisioning if needed.</p> </li> </ul> <p> </p>"},{"location":"Projects/Guacamole/#connections","title":"Connections","text":"<ul> <li> <p>This is the Connections tab in Apache Guacamole, where I manage remote access to branch systems. Each entry like D01 or BC1-Replication represents a remote session\u2014often mirrored for redundancy. I standardized the naming and grouped connections by function to simplify access and troubleshooting.</p> </li> <li> <p>As guacadmin, I configure protocols, hostnames, and ports, and I\u2019ve documented the setup for easy handoff. This is part of a broader remote access strategy I built using Guacamole and Remotely\u2014secure, agentless, and scalable.</p> </li> </ul> <p> </p>"},{"location":"Projects/Homarr%20Dashboard/","title":"Docker Compose File","text":""},{"location":"Projects/Homarr%20Dashboard/#_1","title":"","text":""},{"location":"Projects/Homarr%20Dashboard/#dashboard","title":"Dashboard","text":"<ul> <li> <p>This is my internal dashboard for, where I centralized access to our monitoring tools, remote access platforms, and key infrastructure systems. I grouped services Server Monitoring for quick visibility, and added tools to manage branch systems securely.</p> </li> <li> <p>It helps me respond faster to issues, monitor uptime, and streamline troubleshooting across multiple environments. I built it to reduce friction, improve team handoff, and keep our infrastructure transparent and scalable.</p> </li> </ul> <p> </p>"},{"location":"Projects/Kong%20API%20Gateway/","title":"Kong API Gateway","text":""},{"location":"Projects/Kong%20API%20Gateway/#kong-servers","title":"Kong Servers","text":"<p>Connections</p> <ul> <li>This shows how I manage multiple Kong nodes in KONGA, with versioning and activation controls for each gateway\u2014ensuring modular, testable, and scalable API infrastructure.</li> </ul> <p> </p> <p>Services</p> <ul> <li>This is the service configuration panel for infor, where I define protocol, host, and port\u2014standardizing upstream service registration for secure, consistent routing.</li> </ul> <p> </p> <p>Routes</p> <ul> <li>This route setup defines how traffic is matched and forwarded using host/path rules and protocol filters\u2014critical for precise API gateway routing and regex-based prioritization.</li> </ul> <p> </p> <p>Plugins</p> <ul> <li>Here I\u2019ve attached Prometheus for metrics, File-log for persistent logging, and Basic-auth for access control\u2014demonstrating layered observability and security across all consumers.</li> </ul> <p> </p> <p>Basic Auth | Credentials</p> <ul> <li>This shows how I assign Basic Auth credentials to the infor consumer in Kong, enabling secure, credential-based access to protected routes.</li> </ul> <p> </p> <p>Accessible Routes</p> <ul> <li>This interface displays the plugins and routes accessible to infor, where I\u2019ve layered Prometheus for metrics, File Log for audit trails, and Basic Auth for authentication\u2014ensuring observability and access control per consumer.</li> </ul> <p> </p>"},{"location":"Projects/Kong%20API%20Gateway/#nginx-load-balancer","title":"NGINX Load Balancer","text":"<p>NGINX Configuration</p> <ul> <li>This NGINX config defines SSL-secured reverse proxying to production and test upstreams, with health-check parameters and standardized headers\u2014enabling seamless API routing across multiple domains and environments.</li> </ul> <p> </p> <p> </p> <p> </p> <p>SSL Certificate Files</p> <p> </p>"},{"location":"Projects/Kong%20API%20Gateway/#prometheus","title":"Prometheus","text":"<ul> <li>This shows Prometheus successfully scraping metrics from three Kong nodes\u2014each labeled under the kong job and reporting healthy (UP) status\u2014validating multi-node observability and real-time gateway monitoring.</li> </ul>"},{"location":"Projects/Kong%20API%20Gateway/#grafana","title":"Grafana","text":"<p>Grafana Dashboard</p> <ul> <li>This Grafana dashboard visualizes real-time API traffic, success/error rates, and request durations\u2014helping us monitor endpoint health and troubleshoot issues quickly using logs filtered by client IP, method, and environment.</li> </ul> <p> </p> <p>Data Sources</p> <ul> <li>This shows my Grafana setup with Prometheus and Loki configured as data sources\u2014enabling unified metrics and log observability across our infrastructure.\"</li> </ul> <p> </p> <p>Prometheus Config</p> <ul> <li>This is the Prometheus data source setup, pointing to http://prometheus:9090, which I use for real-time system metrics and alerting.</li> </ul> <p> </p> <p>Loki Config</p> <ul> <li>This is the Loki data source setup at http://loki:3100, which powers centralized log aggregation and filtering for all services.</li> </ul> <p> </p>"},{"location":"Projects/Remotely/","title":"Remotely Dashboard","text":"<ul> <li>This is my Remotely dashboard showing real-time device metrics\u2014user, platform, disk, and memory usage\u2014for proactive monitoring and performance management</li> </ul>"},{"location":"Projects/Remotely/#remotely-deploy-agent","title":"Remotely Deploy Agent","text":"<ul> <li>This section provides remote deployment commands for persistent agents across Windows, Ubuntu, and Manjaro, enabling secure and scalable remote support.</li> </ul>"},{"location":"Projects/Remotely/#remotely-docker-containers","title":"Remotely Docker Containers","text":"<ul> <li>This shows my Docker setup for Remotely and Caddy, running as containers with persistent health checks and exposed ports for secure remote access.</li> </ul>"},{"location":"Projects/Remotely/#caddy-as-reverse-proxy","title":"Caddy as Reverse Proxy","text":"<ul> <li>This is my Caddyfile configuration, where I set up TLS and reverse proxy rules to route traffic to the Remotely container securely.</li> </ul>"},{"location":"Projects/VMware/","title":"ESXI GUI Client","text":""},{"location":"Projects/VMware/#sample-of-created-servers","title":"Sample of Created Servers","text":""},{"location":"Projects/cicd/","title":"Simple CI/CD Workflow","text":"<p>Github Actions Workflow for MkDocs Deployment:</p> <ul> <li>This workflow automates MkDocs Material deployment to GitHub Pages on every push to main or master, using Python setup, caching, and forced gh-deploy for seamless documentation updates.</li> </ul> <p> </p> <p>CI Workflow</p> <ul> <li>This workflow runs automated checks on every commit to ensure documentation integrity and fast feedback.</li> </ul> <p> </p> <p>Pages Build-Deployment</p> <ul> <li>This workflow builds and deploys the MkDocs site to GitHub Pages automatically after each push.</li> </ul> <p> </p>"}]}